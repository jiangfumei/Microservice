server:
  port: 6676

spring:
  datasource:
    url: jdbc:${DATASOURCE_DBTYPE:mysql}://${DATASOURCE_HOST:localhost}:${DATASOURCE_PORT:3306}/microservice?characterEncoding=UTF-8&useUnicode=true&useSSL=false
    username: ${DATASOURCE_USERNAME:root}
    password: ${DATASOURCE_PASSWORD:jfm}
    driver-class-name: com.mysql.cj.jdbc.Driver

  security:
    oauth2:
      client:
        clientId: user-client
        clientSecret: user-secret-8888
        accessTokenValiditySeconds: 20000
        refreshTokenValiditySeconds: 20000
        user-authorization-uri: http://localhost:6667/oauth/authorize
        access-token-uri: http://localhost:6667/oauth/token
        grant-type: password
      resource:
        id: authorization-resource
        ## user-info-uri和token-info-uri二选择即可
        ## 如果配置了user-info-uri，该资源服务器使用userInfoTokenServices远程调用认证中心接口，通过认证中心的OAuth2AuthenticationProcessingFilter完成验证工作，一般设置user-info-uri即可
        user-info-uri: http://localhost:6667/user/
        prefer-token-info: false
        ## 该资源服务器使用RemoteTokenServices远程调用认证中心接口，注意一点就是如果使用token-info-uri那么就必须设置上clientId和clientSecret，通过CheckTokenEndpoint完成验证工作
        #token-info-uri: http://127.0.0.1:8001/oauth/check_token
        jwt:
          key-uri: http://localhost:6667/oauth/token_key
          key-value: oauth



